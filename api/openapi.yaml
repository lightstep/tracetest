openapi: 3.0.0
info:
  title: Project X
  description: OpenAPI definition for project X endpoint and resources
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/Kubeshop/projectx/1.0.0
  description: SwaggerHub API Auto Mocking
paths:
  /tests:
    get:
      tags:
      - api
      summary: Create new test
      description: get tests
      operationId: getTests
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Test'
        "500":
          description: problem with creating test
    post:
      tags:
      - api
      summary: Create new test
      description: Create new test action
      operationId: createTest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Test'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Test'
        "500":
          description: problem with creating test
  /tests/{testid}:
    get:
      tags:
      - api
      parameters:
      - name: testid
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: gets a test
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Test'
  /tests/{testid}/assertions:
    get:
      tags:
      - api
      parameters:
      - name: testid
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: gets a list of assertions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Assertion'
  /tests/{testid}/run:
    post:
      tags:
      - api
      parameters:
      - name: testid
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestRun'
  /tests/{testid}/results/{id}:
    get:
      tags:
      - api
      parameters:
      - name: testid
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Result'
  /tests/{id}/results:
    get:
      tags:
      - api
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Result'
components:
  schemas:
    Test:
      type: object
      properties:
        id:
          type: string
          description: ID
          readOnly: true
        name:
          type: string
        description:
          type: string
        serviceUnderTest:
          $ref: '#/components/schemas/Test_serviceUnderTest'
        assertions:
          type: array
          description: Definition of assertions that are going to be made
          items:
            $ref: '#/components/schemas/Assertion'
        repeats:
          type: integer
    Assertion:
      type: object
      properties:
        id:
          type: string
          description: ID
          readOnly: true
        operationName:
          type: string
        duration:
          type: string
          format: duration
        numOfSPans:
          type: integer
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/Attribute'
    TestRun:
      type: object
      properties:
        id:
          type: string
          description: ID
          readOnly: true
    Result:
      type: object
      properties:
        id:
          type: string
          description: ID
          readOnly: true
        successful:
          $ref: '#/components/schemas/Assertion'
        failed:
          $ref: '#/components/schemas/Assertion'
        timeStamp:
          type: string
          format: date-time
    Attribute:
      type: object
      properties:
        id:
          type: string
          description: ID
          readOnly: true
        key:
          type: string
        value:
          type: string
    Test_serviceUnderTest:
      type: object
      properties:
        id:
          type: string
          description: ID
          readOnly: true
        url:
          type: string
          description: URL of the service under test
        auth:
          type: string
          description: authorization data for the request
