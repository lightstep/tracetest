openapi: 3.0.0
info:
  description: OpenAPI definition for project X endpoint and resources
  title: Project X
  version: 0.0.1
servers:
- url: /
paths:
  /tests:
    get:
      description: get tests
      operationId: getTests
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Test'
                type: array
          description: successful operation
        "500":
          description: problem with creating test
      summary: Create new test
      tags:
      - api
    post:
      description: Create new test action
      operationId: createTest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Test'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Test'
          description: successful operation
        "500":
          description: problem with creating test
      summary: Create new test
      tags:
      - api
  /tests/{testid}/run:
    post:
      parameters:
      - explode: false
        in: path
        name: testid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestRun'
          description: successful operation
      tags:
      - api
  /tests/{testid}/results/{id}:
    get:
      parameters:
      - explode: false
        in: path
        name: testid
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Result'
                type: array
          description: successful operation
      tags:
      - api
  /tests/{testid}/results/{id}/trace:
    get:
      parameters:
      - explode: false
        in: path
        name: testid
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: trace
      tags:
      - api
  /tests/{id}/results:
    get:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Result'
                type: array
          description: successful operation
      tags:
      - api
  /test/{id}/assertions:
    get:
      description: Gets all assertions associated to the test
      operationId: getAssertions
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Assertion'
                type: array
          description: successful operation
      tags:
      - api
    post:
      operationId: createAssertion
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Assertion'
      responses:
        "200":
          description: OK
      tags:
      - api
components:
  schemas:
    Test:
      example:
        repeats: 0
        name: name
        description: description
        id: id
        assertions:
        - selector: selector
          id: id
          comparable: comparable
          operator: operator
          successful: true
        - selector: selector
          id: id
          comparable: comparable
          operator: operator
          successful: true
        serviceUnderTest:
          auth: auth
          id: id
          url: url
      properties:
        id:
          description: ID
          readOnly: true
          type: string
        name:
          type: string
        description:
          type: string
        serviceUnderTest:
          $ref: '#/components/schemas/Test_serviceUnderTest'
        assertions:
          description: Definition of assertions that are going to be made
          items:
            $ref: '#/components/schemas/Assertion'
          type: array
        repeats:
          type: integer
      type: object
    Assertion:
      example:
        selector: selector
        id: id
        comparable: comparable
        operator: operator
        successful: true
      properties:
        id:
          description: ID
          readOnly: true
          type: string
        selector:
          description: Defines the scope where the sought property/ies is located
          type: string
        comparable:
          description: Defines the expected value of the property/ies
          type: string
        operator:
          description: |
            Defines how the value of sought property/ies should be compared
            For example lt (less then), gt (greater then), eq (equals), in (contains)
          type: string
        successful:
          type: boolean
      type: object
    Result:
      example:
        traceid: traceid
        spanid: spanid
        createdAt: 2000-01-23T04:56:07.000+00:00
        completedAt: 2000-01-23T04:56:07.000+00:00
        id: id
        failed:
          selector: selector
          id: id
          comparable: comparable
          operator: operator
          successful: true
        successful:
          selector: selector
          id: id
          comparable: comparable
          operator: operator
          successful: true
      properties:
        id:
          description: ID
          readOnly: true
          type: string
        traceid:
          description: trace ID
          readOnly: true
          type: string
        spanid:
          description: parent span ID
          readOnly: true
          type: string
        successful:
          $ref: '#/components/schemas/Assertion'
        failed:
          $ref: '#/components/schemas/Assertion'
        createdAt:
          format: date-time
          type: string
        completedAt:
          format: date-time
          type: string
      type: object
    Attribute:
      properties:
        id:
          description: ID
          readOnly: true
          type: string
        key:
          type: string
        value:
          type: string
      type: object
    TestRun:
      example:
        id: id
      properties:
        id:
          description: ID
          readOnly: true
          type: string
      type: object
    Test_serviceUnderTest:
      example:
        auth: auth
        id: id
        url: url
      properties:
        id:
          description: ID
          readOnly: true
          type: string
        url:
          description: URL of the service under test
          type: string
        auth:
          description: authorization data for the request
          type: string
      type: object
